{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/api/university/department/route.ts"],"sourcesContent":["\"use server\";\n\nimport { NextResponse } from \"next/server\";\n\n// Mock database operations for demonstration\nlet departments = [\n  { dept_name: \"CS\", building: \"CompSci\", budget: 1000000 },\n  { dept_name: \"Math\", building: \"MathBuilding\", budget: 800000 },\n];\n\n// GET: Read all departments\nexport async function GET() {\n  return NextResponse.json(departments);\n}\n\n// POST: Insert a new department\nexport async function POST(request: Request) {\n  const newDepartment = await request.json();\n  departments.push(newDepartment);\n  return NextResponse.json({ message: \"Department added\", department: newDepartment });\n}\n\n// PUT: Update a department by dept_name\nexport async function PUT(request: Request) {\n  const updatedDepartment = await request.json();\n  const index = departments.findIndex((d) => d.dept_name === updatedDepartment.dept_name);\n  if (index !== -1) {\n    departments[index] = updatedDepartment;\n    return NextResponse.json({ message: \"Department updated\", department: updatedDepartment });\n  } else {\n    return NextResponse.json({ message: \"Department not found\" }, { status: 404 });\n  }\n}\n\n// DELETE: Delete a department by dept_name\nexport async function DELETE(request: Request) {\n  const { dept_name } = await request.json();\n  const index = departments.findIndex((d) => d.dept_name === dept_name);\n  if (index !== -1) {\n    departments.splice(index, 1);\n    return NextResponse.json({ message: \"Department deleted\" });\n  } else {\n    return NextResponse.json({ message: \"Department not found\" }, { status: 404 });\n  }\n}\n"],"names":[],"mappings":";;;;;;;;AAEA;;;;;AAEA,6CAA6C;AAC7C,IAAI,cAAc;IAChB;QAAE,WAAW;QAAM,UAAU;QAAW,QAAQ;IAAQ;IACxD;QAAE,WAAW;QAAQ,UAAU;QAAgB,QAAQ;IAAO;CAC/D;AAGM,eAAe;IACpB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAC3B;AAGO,eAAe,KAAK,OAAgB;IACzC,MAAM,gBAAgB,MAAM,QAAQ,IAAI;IACxC,YAAY,IAAI,CAAC;IACjB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,SAAS;QAAoB,YAAY;IAAc;AACpF;AAGO,eAAe,IAAI,OAAgB;IACxC,MAAM,oBAAoB,MAAM,QAAQ,IAAI;IAC5C,MAAM,QAAQ,YAAY,SAAS,CAAC,CAAC,IAAM,EAAE,SAAS,KAAK,kBAAkB,SAAS;IACtF,IAAI,UAAU,CAAC,GAAG;QAChB,WAAW,CAAC,MAAM,GAAG;QACrB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAsB,YAAY;QAAkB;IAC1F,OAAO;QACL,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAuB,GAAG;YAAE,QAAQ;QAAI;IAC9E;AACF;AAGO,eAAe,OAAO,OAAgB;IAC3C,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,QAAQ,IAAI;IACxC,MAAM,QAAQ,YAAY,SAAS,CAAC,CAAC,IAAM,EAAE,SAAS,KAAK;IAC3D,IAAI,UAAU,CAAC,GAAG;QAChB,YAAY,MAAM,CAAC,OAAO;QAC1B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAqB;IAC3D,OAAO;QACL,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAuB,GAAG;YAAE,QAAQ;QAAI;IAC9E;AACF;;;IAjCsB;IAKA;IAOA;IAYA;;AAxBA,iPAAA;AAKA,iPAAA;AAOA,iPAAA;AAYA,iPAAA","debugId":null}}]
}