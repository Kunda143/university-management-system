{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/api/university/instructor/route.ts"],"sourcesContent":["\"use server\";\n\nimport { NextResponse } from \"next/server\";\n\n// Mock database operations for demonstration\nlet instructors = [\n  { ID: \"I001\", name: \"Dr. Smith\", dept_name: \"CS\", salary: 90000 },\n  { ID: \"I002\", name: \"Dr. Johnson\", dept_name: \"Math\", salary: 85000 },\n];\n\n// GET: Read all instructors\nexport async function GET() {\n  return NextResponse.json(instructors);\n}\n\n// POST: Insert a new instructor\nexport async function POST(request: Request) {\n  const newInstructor = await request.json();\n  instructors.push(newInstructor);\n  return NextResponse.json({ message: \"Instructor added\", instructor: newInstructor });\n}\n\n// PUT: Update an instructor by ID\nexport async function PUT(request: Request) {\n  const updatedInstructor = await request.json();\n  const index = instructors.findIndex((i) => i.ID === updatedInstructor.ID);\n  if (index !== -1) {\n    instructors[index] = updatedInstructor;\n    return NextResponse.json({ message: \"Instructor updated\", instructor: updatedInstructor });\n  } else {\n    return NextResponse.json({ message: \"Instructor not found\" }, { status: 404 });\n  }\n}\n\n// DELETE: Delete an instructor by ID\nexport async function DELETE(request: Request) {\n  const { ID } = await request.json();\n  const index = instructors.findIndex((i) => i.ID === ID);\n  if (index !== -1) {\n    instructors.splice(index, 1);\n    return NextResponse.json({ message: \"Instructor deleted\" });\n  } else {\n    return NextResponse.json({ message: \"Instructor not found\" }, { status: 404 });\n  }\n}\n"],"names":[],"mappings":";;;;;;;;AAEA;;;;;AAEA,6CAA6C;AAC7C,IAAI,cAAc;IAChB;QAAE,IAAI;QAAQ,MAAM;QAAa,WAAW;QAAM,QAAQ;IAAM;IAChE;QAAE,IAAI;QAAQ,MAAM;QAAe,WAAW;QAAQ,QAAQ;IAAM;CACrE;AAGM,eAAe;IACpB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAC3B;AAGO,eAAe,KAAK,OAAgB;IACzC,MAAM,gBAAgB,MAAM,QAAQ,IAAI;IACxC,YAAY,IAAI,CAAC;IACjB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE,SAAS;QAAoB,YAAY;IAAc;AACpF;AAGO,eAAe,IAAI,OAAgB;IACxC,MAAM,oBAAoB,MAAM,QAAQ,IAAI;IAC5C,MAAM,QAAQ,YAAY,SAAS,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK,kBAAkB,EAAE;IACxE,IAAI,UAAU,CAAC,GAAG;QAChB,WAAW,CAAC,MAAM,GAAG;QACrB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAsB,YAAY;QAAkB;IAC1F,OAAO;QACL,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAuB,GAAG;YAAE,QAAQ;QAAI;IAC9E;AACF;AAGO,eAAe,OAAO,OAAgB;IAC3C,MAAM,EAAE,EAAE,EAAE,GAAG,MAAM,QAAQ,IAAI;IACjC,MAAM,QAAQ,YAAY,SAAS,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK;IACpD,IAAI,UAAU,CAAC,GAAG;QAChB,YAAY,MAAM,CAAC,OAAO;QAC1B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAqB;IAC3D,OAAO;QACL,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAuB,GAAG;YAAE,QAAQ;QAAI;IAC9E;AACF;;;IAjCsB;IAKA;IAOA;IAYA;;AAxBA,iPAAA;AAKA,iPAAA;AAOA,iPAAA;AAYA,iPAAA","debugId":null}}]
}